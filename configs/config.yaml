dataset:
  root: "./dataset"
  version: "v1.14"

client:
  host: 127.0.0.1
  port: 2000
  time_out: 6.0

sensors:
  !include ./configs/sensors.yaml

categories:
  !include ./configs/categories.yaml

attributes:
  !include ./configs/attributes.yaml

visibility:
  !include ./configs/visibility.yaml 

worlds:  #map
  - 
    map_name: "Town05_Opt"
    map_category: "semantic_prior"## 地图类别（自定义标签，用于元数据）
    settings:
      fixed_delta_seconds: 0.01 # # 模拟器帧间隔（秒），控制数据采集频率？？？？？？？
    captures: #log
      - 
        date: "2023-01-09"
        time: "10-45-20"
        timezone: "+0800"
        capture_vehicle: "c0003"## 采集车辆 ID（模拟真实世界的采集车编号）
        location: "chengdu"
        scenes: # 场景列表（每个场景是一次连续的数据采集过程）
          - 
            count: 1 # # 生成该场景的数量（1 次）
            custom: True  # 启用自定义配置（天气、车辆位置等手动指定）
            collect_time: 20 # 场景采集持续时间（秒）？？？？
            keyframe_time: 0.2 # 关键帧间隔（秒），控制数据保存频率!!!!!!!!!!!!!!!!!!!
            weather_mode: "custom" ## 天气模式（custom 表示手动指定天气参数）
            weather:
              cloudiness: 0 # Values range from 0 to 100, being 0 a clear sky and 100 one completely covered with clouds.
              precipitation: 0 # Rain intensity values range from 0 to 100, being 0 none at all and 100 a heavy rain.
              precipitation_deposits: 0 # Determines the creation of puddles. Values range from 0 to 100, being 0 none at all and 100 a road completely capped with water. Puddles are created with static noise, meaning that they will always appear at the same locations.
              wind_intensity: 0 # Controls the strength of the wind with values from 0, no wind at all, to 100, a strong wind. The wind does affect rain direction and leaves from trees, so this value is restricted to avoid animation issues.
              sun_azimuth_angle: 0 # The azimuth angle of the sun. Values range from 0 to 360. Zero is an origin point in a sphere determined by Unreal Engine.
              sun_altitude_angle: 90 # Altitude angle of the sun. Values range from -90 to 90 corresponding to midnight and midday each.
              fog_density: 0 # Fog concentration or thickness. It only affects the RGB camera sensor. Values range from 0 to 100.
              fog_distance: 0 # Fog start distance. Values range from 0 to infinite.
              wetness: 0 # Wetness intensity. It only affects the RGB camera sensor. Values range from 0 to 100.
              fog_falloff: 0 # Density of the fog (as in specific mass) from 0 to infinity. The bigger the value, the more dense and heavy it will be, and the fog will reach smaller heights. Corresponds to Fog Height Falloff in the UE docs.If the value is 0, the fog will be lighter than air, and will cover the whole scene.A value of 1 is approximately as dense as the air, and reaches normal-sized buildings.For values greater than 5, the air will be so dense that it will be compressed on ground level.
              scattering_intensity: 0 # Controls how much the light will contribute to volumetric fog. When set to 0, there is no contribution.
              mie_scattering_scale: 0 # Controls interaction of light with large particles like pollen or air pollution resulting in a hazy sky with halos around the light sources. When set to 0, there is no contribution.
              rayleigh_scattering_scale: 0.0331 # Controls interaction of light with small particles like air molecules. Dependent on light wavelength, resulting in a blue sky in the day or red sky in the evening.
#              dust_storm: 0 # Determines the strength of the dust storm weather. Values range from 0 to 100.
            ego_vehicle: # 主车（采集车）配置
              bp_name: "vehicle.tesla.model3"  # 车辆蓝图（Carla 中的车型）
              location:  # 初始朝向（偏航角、俯仰角、翻滚角）
                x: -48.642700
                y: -19.353889
                z: 0.600000
              rotation: 
                yaw: 90.432304
                pitch: 0.0
                roll: 0.0
              options: ~
              path: # 主车行驶路径（多个点组成的轨迹）
                - x: -48.642700
                  y: -19.353889
                  z: 0.600000
            vehicles:
              !include ./configs/vehicles.yaml  # 其他车辆配置（数量、类型、轨迹等）
            walkers:
              !include ./configs/walkers.yaml # 行人配置（数量、类型、行走路径等）
            calibrated_sensors:
              !include ./configs/calibrated_sensors.yaml # 传感器校准参数（安装位置、内参等）
            description:
              "test1"  # 场景描述（用于元数据）

#          -
#            count: 1  # 场景 2：与场景 1 配置相同，仅描述不同
#            custom: True
#            collect_time: 1
#            keyframe_time: 0.5
#            weather_mode: "custom"
#            weather:
#              cloudiness: 0 # Values range from 0 to 100, being 0 a clear sky and 100 one completely covered with clouds.
#              precipitation: 0 # Rain intensity values range from 0 to 100, being 0 none at all and 100 a heavy rain.
#              precipitation_deposits: 0 # Determines the creation of puddles. Values range from 0 to 100, being 0 none at all and 100 a road completely capped with water. Puddles are created with static noise, meaning that they will always appear at the same locations.
#              wind_intensity: 0 # Controls the strength of the wind with values from 0, no wind at all, to 100, a strong wind. The wind does affect rain direction and leaves from trees, so this value is restricted to avoid animation issues.
#              sun_azimuth_angle: 0 # The azimuth angle of the sun. Values range from 0 to 360. Zero is an origin point in a sphere determined by Unreal Engine.
#              sun_altitude_angle: 90 # Altitude angle of the sun. Values range from -90 to 90 corresponding to midnight and midday each.
#              fog_density: 0 # Fog concentration or thickness. It only affects the RGB camera sensor. Values range from 0 to 100.
#              fog_distance: 0 # Fog start distance. Values range from 0 to infinite.
#              wetness: 0 # Wetness intensity. It only affects the RGB camera sensor. Values range from 0 to 100.
#              fog_falloff: 0 # Density of the fog (as in specific mass) from 0 to infinity. The bigger the value, the more dense and heavy it will be, and the fog will reach smaller heights. Corresponds to Fog Height Falloff in the UE docs.If the value is 0, the fog will be lighter than air, and will cover the whole scene.A value of 1 is approximately as dense as the air, and reaches normal-sized buildings.For values greater than 5, the air will be so dense that it will be compressed on ground level.
#              scattering_intensity: 0 # Controls how much the light will contribute to volumetric fog. When set to 0, there is no contribution.
#              mie_scattering_scale: 0 # Controls interaction of light with large particles like pollen or air pollution resulting in a hazy sky with halos around the light sources. When set to 0, there is no contribution.
#              rayleigh_scattering_scale: 0.0331 # Controls interaction of light with small particles like air molecules. Dependent on light wavelength, resulting in a blue sky in the day or red sky in the evening.
#              dust_storm: 0 # Determines the strength of the dust storm weather. Values range from 0 to 100.
#            ego_vehicle:
#              bp_name: "vehicle.tesla.model3"
#              location:
#                x: -80.62303161621094
#                y: 27.47465705871582
#                z: 0.5999999642372131
#              rotation:
#                yaw: -90
#                pitch: 0.0
#                roll: 0.0
#              options: ~
#              path:
#                -
#                  x: -89.62303161621094
#                  y: 16.47465705871582
#                  z: 0.5999999642372131
#            vehicles:
#              !include ./configs/vehicles.yaml
#            walkers:
#              !include ./configs/walkers.yaml
#            calibrated_sensors:
#              !include ./configs/calibrated_sensors.yaml
#            description:
#              "test2"
#          -
#            count: 5 # 场景 3：随机场景（custom: False）
#            custom: False # 禁用自定义，由程序随机生成场景参数
#            collect_time: 2
#            keyframe_time: 0.5
#            ego_bp_name: "vehicle.tesla.model3"
#            calibrated_sensors:
#              !include ./configs/calibrated_sensors.yaml
#            description:
#              "test"